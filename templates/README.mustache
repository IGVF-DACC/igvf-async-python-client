# {{{projectName}}}
**Unless you have a specific need for an async Python client, you are probably looking for the synchronous [IGVF Python client](https://github.com/IGVF-DACC/igvf-python-client).**

The Python client is autogenerated based on this [IGVF OpenAPI specification](https://github.com/IGVF-DACC/igvf-client-openapi-spec/blob/main/openapi_spec.json), which exposes `search`, `collection`, and other read endpoints from the [IGVF Data Portal](https://data.igvf.org).

*Note while the API endpoints are relatively stable, the underlying data model is still evolving, and changing fields/types can cause breaking changes. The latest version of the client reflects the latest version of the schema used by the API.*

- API version: {{appVersion}}
- Package version: {{packageVersion}}
{{^hideGenerationTimestamp}}
- Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}
- Generator version: {{generatorVersion}}
- Build package: {{generatorClass}}
{{#infoUrl}}
For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

## Requirements.

Python 3.9+

## Installation & Usage

Pip install:

```sh
$ pip install igvf-async-client
```

Or clone the repo and and install:
```sh
$ git clone https://{{gitHost}}/{{{gitUserId}}}/{{{gitRepoId}}}
$ cd {{{gitRepoId}}}
$ pip install -e .
```

Then import the package:
```python
$ python -m asyncio
>>> import {{{packageName}}}
```

### Examples

(Must use an async runtime, e.g. `$ python -m asyncio`.)

```python
from igvf_async_client import AsyncIgvfApi

api = AsyncIgvfApi()

# Search for Software that matches query `abc`.
r = await api.search(query='abc', type=['Software'])

# Print total number of results and list of results in `@graph`.
print(r.total)
print(r.graph)

# Pull first item, unwrap to underlying Software item with `actual_instance`.
software_item = r.graph[0].actual_instance

# Print Software item and specific fields.
print(software_item)
print(software_item.id)
print(software_item.description)

# Get the Lab item based on the lab @id in the Software item.
lab = await api.get_by_id(software_item.lab)

# Print lab and specific field.
print(lab)
print(lab.title)
```

See other examples in [async_example.ipynb](async_examples.ipynb) and [test_endpoints.py](test/test_endpoints.py)

Refer to the documentation for a full specification of endpoint inputs and outputs and model fields.

{{> common_README }}

## Optional authorization
```python
import os

from igvf_async_client import Configuration
from igvf_async_client import ApiClient
from igvf_async_client import AsyncIgvfApi

config = Configuration(
    access_key = os.environ["IGVF_ACCESS_KEY"],
    secret_access_key = os.environ["IGVF_SECRET_ACCESS_KEY"]
)

client = ApiClient(config)

api = AsyncIgvfApi(client)
```